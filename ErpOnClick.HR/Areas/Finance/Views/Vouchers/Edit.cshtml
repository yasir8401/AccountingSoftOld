@using ErpOnClick.DAL.Models
@using ErpOnClick.ErpMain.Models.Finance;
@using ErpOnClick.ErpMain.Resources
@inject LocService SharedLocalizer

@{
    VoucherExtended VouchersMDetails = Model.voucherMDetail;
    List<Customers> CustomersList = Model.CustomersList;
    List<Vendors> VendorsList = Model.VendorsList;
    List<VoucherLines> VoucherDList = Model.voucherDList;
    List<Lookups> VoucherTypes = Model.VoucherTypes;
    List<Emp> EmployeesList = Model.EmployeesList;
    List<Accounts> AccountsList = Model.AccountsList;
    bool isEdit = (VouchersMDetails.VoucherId != 0);
    var username = User.Claims.Where(c => c.Type == "NameIdentifier").Select(c => c.Value).FirstOrDefault();
    var voucherNo = Model.voucherNo;

    var count = 0;
}

<style>
    .select2-selection {
        border: 0px solid black !important;
    }
    .select2-container, .select2-container--default, .select2-container--focus {
        border-radius: 0px !important;
        border: 1px solid #dee2e6 !important;
    }
</style>

<link rel="stylesheet" href="~/adminlte/dist/css/invoice.css">


<form id="formEdit" role="form" method="post">
    <input type="hidden" id="ACTION_TYPE" name="ACTION_TYPE" value="@(isEdit ? "Update" : "Save")" />
    <input type="hidden" id="VoucherId" name="VoucherId" value="@(VouchersMDetails != null ? VouchersMDetails.VoucherId : 0)" />


    <div class="card card-default card-outline">
        <div class="card-header">
            <h2 class="card-title pt-1">
                @SharedLocalizer.GetLocalizedHtmlString("General Entry")
            </h2>
            <!-- tools box -->
            <div class="card-tools">
                @if (VouchersMDetails != null)
                {
                    <a href="~/Finance/Vouchers/print/@VouchersMDetails.VoucherId" target="_blank" class="btn btn-default btn-sm"><i class="fa fa-print fa-fw"></i>@SharedLocalizer.GetLocalizedHtmlString("Print")</a>
                }
                <button type="submit" class="btn btn-primary btn-sm"><i class="fa fa-save fa-fw"></i> @SharedLocalizer.GetLocalizedHtmlString("Save")</button>
                <a href="~/Finance/Vouchers/Index" class="btn btn-default btn-sm"><i class="fa fa-arrow-left fa-fw"></i>@SharedLocalizer.GetLocalizedHtmlString("Return")</a>
            </div>
        </div>
        <div class="card-body pb-0 pt-2 text-sm">
            <div class="row">
                <div class="col-sm-4">
                    <div class="form-group ">
                        <label>@SharedLocalizer.GetLocalizedHtmlString("General Entry Date")</label>
                        <input name="VoucherEntryDate" id="VoucherEntryDate" class="form-control DatePicker" value="@(VouchersMDetails != null && VouchersMDetails.VoucherEntryDate != null ? Convert.ToDateTime(VouchersMDetails.VoucherEntryDate).ToString("dd-MMM-yyyy") : "")" />

                    </div>
                </div>
                <div class="col-sm-4">
                    <div class="form-group ">
                        <label>@SharedLocalizer.GetLocalizedHtmlString("General Entry Code")</label>
                        <input type="text" readonly name="VoucherCode" id="VoucherCode" class="form-control" value="@(VouchersMDetails != null && VouchersMDetails.VoucherCode != null ? VouchersMDetails.VoucherCode : "")" />

                    </div>
                </div>
                <div class="col-sm-4">
                    <div class="form-group ">
                        <label>@SharedLocalizer.GetLocalizedHtmlString("General Entry Type")</label>
                        <select name="VoucherType" id="VoucherType" class="form-control" required>
                            <option value="" selected disabled></option>
                            @foreach (var item in VoucherTypes)
                            {
                                <option value="@item.Code" @(VouchersMDetails != null && VouchersMDetails.VoucherType != null && VouchersMDetails.VoucherType == item.Code ? "selected" : "")>@item.LookupNameEn</option>

                            }
                        </select>
                    </div>
                </div>
                <div class="col-sm-3">
                    <div class="form-group ">
                        <label>@SharedLocalizer.GetLocalizedHtmlString("Created By")</label>
                        <input type="text" readonly name="CreatedBy" id="CreatedBy" class="form-control" value="@(isEdit == true && VouchersMDetails != null && VouchersMDetails.CreatedBy != null && VouchersMDetails.CreatedByName != null ? VouchersMDetails.CreatedByName : "")" />
                    </div>
                </div>
                <div class="col-sm-3">
                    <div class="form-group ">
                        <label>@SharedLocalizer.GetLocalizedHtmlString("Created Date")</label>
                        <input type="text" readonly name="CreatedDate" id="CreatedDate" class="form-control " value="@(VouchersMDetails != null && VouchersMDetails.CreatedDate != null ? Convert.ToDateTime(VouchersMDetails.CreatedDate).ToString("dd-MMM-yyyy") : "")" />
                    </div>
                </div>
                <div class="col-sm-3">
                    <div class="form-group ">
                        <label>@SharedLocalizer.GetLocalizedHtmlString("Approved By")</label>
                        <input type="text" readonly name="" id="" class="form-control" value="@(isEdit == true && VouchersMDetails != null && VouchersMDetails.ApprovedByName != null ? VouchersMDetails.ApprovedByName : "Not Yet Approved")" />
                    </div>
                </div>
                <div class="col-sm-3">
                    <div class="form-group ">
                        <label>@SharedLocalizer.GetLocalizedHtmlString("Approved Date")</label>
                        <input type="text" readonly name="" id="" class="form-control " value="@(VouchersMDetails != null && VouchersMDetails.ApprovedDate != null ? Convert.ToDateTime(VouchersMDetails.ApprovedDate).ToString("dd-MMM-yyyy") : "Not Yet Approved")" />
                    </div>
                </div>
                <div class="col-sm-6">
                    <label>@SharedLocalizer.GetLocalizedHtmlString("Narration")</label>
                    <div class=" card card-outline card-body p-2">
                        <textarea id="Description" name="Description" class="form-control " style="border:none" placeholder="Enter Description here...">@(VouchersMDetails != null ? VouchersMDetails.Description:"")</textarea>
                    </div>
                </div>
                <div class="col-sm-3">
                    <div class="form-group ">
                        <label>@SharedLocalizer.GetLocalizedHtmlString("Customer Ref")</label>
                        <select name="CustomerId" id="CustomerId" class="form-control">
                            <option value="" selected disabled></option>
                            @foreach (var item in CustomersList)
                            {
                                <option value="@item.CustomerId" @(VouchersMDetails != null && VouchersMDetails.CustomerId != null && VouchersMDetails.CustomerId == item.CustomerId ? "selected" : "")>@item.CustomerNameEn</option>

                            }
                        </select>
                    </div>
                </div>
                <div class="col-sm-3">
                    <div class="form-group ">
                        <label>@SharedLocalizer.GetLocalizedHtmlString("Vendor Ref")</label>
                        <select name="VendorId" id="VendorId" class="form-control">
                            <option value="" selected disabled></option>
                            @foreach (var item in VendorsList)
                            {
                                <option value="@item.VendorId" @(VouchersMDetails != null && VouchersMDetails.VendorId != null && VouchersMDetails.VendorId == item.VendorId ? "selected" : "")>@item.VendorNameEn</option>

                            }
                        </select>
                    </div>
                </div>
            </div>
            <div class="row">

            </div>
        </div>
    </div>
    <div class="card card-default card-outline">
        <div class="card-header">
            <h2 class="card-title pt-1">
                @SharedLocalizer.GetLocalizedHtmlString("Transaction")
            </h2>
            <div class="card-tools">
                <a href="javascript:void(0)" class="btn btn-sm btn-default" onclick="addRow(1)">@SharedLocalizer.GetLocalizedHtmlString("Add Row")</a>
                <a href="javascript:void(0)" class="btn btn-sm btn-default" onclick="addRow(3)">@SharedLocalizer.GetLocalizedHtmlString("Add 3 Rows")</a>
                <a href="javascript:void(0)" class="btn btn-sm btn-default" onclick="addRow(5)">@SharedLocalizer.GetLocalizedHtmlString("Add 5 Rows")</a>

            </div>
        </div>
        <div class="card-body p-0">

            <div class="table-responsive">
                <table id="tblLines" class="table table-bordered m-0 table-condensed">
                    <thead>
                        <tr>
                            <th style="display:none">@SharedLocalizer.GetLocalizedHtmlString("S.No") </th>
                            <th style="width: 18% !important">@SharedLocalizer.GetLocalizedHtmlString("Account Code")</th>
                            <th style="width: 12% !important">@SharedLocalizer.GetLocalizedHtmlString("Account Title")</th>
                            <th style="width: 13% !important">@SharedLocalizer.GetLocalizedHtmlString("Select Employee")</th>
                            <th style="width: 12% !important" hidden>@SharedLocalizer.GetLocalizedHtmlString("Employee Name")</th>
                            <th style="width: 15% !important">@SharedLocalizer.GetLocalizedHtmlString("Description")</th>
                            <th style="width:10%!important">@SharedLocalizer.GetLocalizedHtmlString("Debit")</th>
                            <th style="width:10%!important">@SharedLocalizer.GetLocalizedHtmlString("Credit")</th>
                            <th style="width:5%!important">@SharedLocalizer.GetLocalizedHtmlString("Reference")</th>
                            <th></th>
                        </tr>
                    </thead>
                    <tbody>

                        <tr id="trSample" style="display:none">
                            <td style="display:none">
                                <input type="hidden" id="LineId" name="LineId" value=0>
                            </td>
                            <td style="width:10%!important">
                                <select id="" name="AccountId" class="AccountId">
                                    <option value=""></option>
                                    @foreach (var head in AccountsList.Where(c => c.AccountLevel == 1))
                                    {
                                        foreach (var subhead in AccountsList.Where(c => c.AccountLevel == 2 && c.ParentAccountId == head.AccountId /*c.AccountCode.Substring(0, 1) == head.AccountCode*/))
                                        {
                                            foreach (var subsubhead in AccountsList.Where(c => c.AccountLevel == 3 && c.ParentAccountId == subhead.AccountId/* c.AccountCode.Substring(0, 2) == subhead.AccountCode*/))
                                            {
                                                foreach (var lowerhead in AccountsList.Where(c => c.AccountLevel == 4 && c.ParentAccountId == subsubhead.AccountId /*c.AccountCode.Substring(0, 4) == subsubhead.AccountCode*/))
                                                {
                                                    foreach (var transactionable in AccountsList.Where(c => c.AccountLevel == 5 && c.ParentAccountId == lowerhead.AccountId /*c.AccountCode.Substring(0, 6) == lowerhead.AccountCode*/))
                                                    {
                                                        if (transactionable.IsTransactionable == true)
                                                        {
                                                            <option value="@transactionable.AccountId">@transactionable.AccountCode (@transactionable.AccountNameEn)</option>
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    }
                                </select>
                            </td>
                            <td><input type="text" id="AccountTitle" name="AccountTitle" class="text-left" readonly /></td>

                            <td style="width:10%!important">
                                <select id="" name="EmployeeId" class="EmployeeId">

                                    <option value=""></option>
                                    @foreach (var employee in EmployeesList)
                                    {
                                <option value="@employee.EmpId">@employee.EmpId @employee.FirstNameEn @employee.FamilyNameEn</option>
                                    }
                                </select>
                            </td>
                            <td><input type="text" id="EmployeeTitle" name="EmployeeTitle" class="text-left" readonly hidden/></td>
                            <td><input type="text" id="TDescription" name="TDescription" class="text-left" readonly /></td>


                            <td><input min="0" type="number" step="any" id="Debit" name="Debit" /></td>
                            <td><input type="number" min="0" step="any" id="Credit" name="Credit" /></td>
                            <td><input type="text" id="Refno1" name="Refno1" class="text-left" /></td>
                            <td align="center">
                                <input type="hidden" id="IsDeleted" name="IsDeleted" value="false">

                                <a href="javascript:void(0)" id="lineDelete" class="btn btn-sm text-danger" onclick="deleteRow($(this).parent().parent())">
                                    <i id="faDelete" class="fa fa-trash"></i>
                                    <i id="faUndo" class="fa fa-undo text-white" style="display:none"></i>
                                </a>
                            </td>
                        </tr>

                        @foreach (var item in VoucherDList)
                        {
                            count = count + 1;
                            var id = "AccountId" + count;
                            <tr>
                                <td style="display:none">
                                    <input type="hidden" id="LineId" name="LineId" value="@(item.LineId != 0 ? item.LineId : 0)">
                                </td>
                                <td style="width:10%!important">
                                    <select id="" name="AccountId" class="AccountId select2">
                                        <option></option>
                                        @foreach (var head in AccountsList.Where(c => c.AccountLevel == 1))
                                        {
                                            foreach (var subhead in AccountsList.Where(c => c.AccountLevel == 2 && c.ParentAccountId == head.AccountId))
                                            {
                                                foreach (var subsubhead in AccountsList.Where(c => c.AccountLevel == 3 && c.ParentAccountId == subhead.AccountId))
                                                {
                                                    foreach (var lowerhead in AccountsList.Where(c => c.AccountLevel == 4 && c.ParentAccountId == subsubhead.AccountId))
                                                    {
                                                        foreach (var transactionable in AccountsList.Where(c => c.AccountLevel == 5 && c.ParentAccountId == lowerhead.AccountId))
                                                        {
                                                            if (transactionable.IsTransactionable == true)
                                                            {
                                                                <option value="@transactionable.AccountId" @(item != null && item.AccountId == transactionable.AccountId ? "selected" : "")>@transactionable.AccountCode (@transactionable.AccountNameEn)</option>
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    </select>
                                </td>
                                <td><input type="text" id="AccountTitle" name="AccountTitle" class="text-left" readonly /></td>

                                <td style="width:10%!important">
                                    <select id="" name="EmployeeId" class="EmployeeId select2">
                                        <option></option>
                                        @foreach (var employee in EmployeesList)
                                        {
                                            <option value="@employee.EmpId" @(item != null && item.EmployeeId == employee.EmpId ? "selected" : "")>@employee.EmpId @employee.FirstNameEn @employee.FamilyNameEn</option>
                                        }
                                    </select>
                                </td>
                                <td><input type="text" id="EmployeeTitle" name="EmployeeTitle" class="text-left" readonly hidden/></td>
                                <td><input type="text" id="TDescription" name="TDescription" class="text-left" readonly /></td>

                                <td><input type="number" min="0" step="any" id="Debit" name="Debit" value="@(item.Debit != null ? item.Debit : 0)" /></td>
                                <td><input type="number" step="any" min="0" id="Credit" name="Credit" value="@(item.Credit != null ? item.Credit : 0)" /></td>

                                <td><input type="text" id="Refno1" name="Refno1" class="text-left" value="@(item.Refno1 != null ? item.Refno1 : null)" /></td>
                                <td align="center">
                                    <input type="hidden" id="IsDeleted" name="IsDeleted" value="false">

                                    <a href="javascript:void(0)" id="lineDelete" class="btn btn-sm text-danger" onclick="deleteRow($(this).parent().parent())">
                                        <i id="faDelete" class="fa fa-trash"></i>
                                        <i id="faUndo" class="fa fa-undo text-white" style="display:none"></i>
                                    </a>
                                </td>
                            </tr>
                        }
                    </tbody>
                    <tfoot id="Summary">
                        <tr>
                            <th colspan="5" style="text-align: right !important;padding-right: 10px !important;">@SharedLocalizer.GetLocalizedHtmlString("Total")</th>
                            <th><input type="number" step="any" id="TotalDebit" name="TotalDebit" readonly class="form-control text-right" value="@(VouchersMDetails!=null?VouchersMDetails.TotalDebit: 0)"></th>
                            <th><input type="number" step="any" id="TotalCredit" name="TotalCredit" readonly class="form-control text-right" value="@(VouchersMDetails!=null?VouchersMDetails.TotalCredit: 0)"></th>
                            <th></th>
                            <th></th>
                        </tr>
                        <tr>
                            <th colspan="5" style="text-align: right !important;padding-right: 10px !important;">@SharedLocalizer.GetLocalizedHtmlString("Difference")</th>
                            <th colspan="2"><input type="number" step="any" id="Difference" name="Difference" readonly class="form-control text-right" value="0"></th>
                            <th></th>
                            <th></th>
                        </tr>
                    </tfoot>
                </table>
            </div>
        </div>
    </div>
</form>



@section scripts{

    <script>
        $(function () {
            $('#Accli').addClass("menu-open");
            $('#Reportsli').removeClass("menu-open");
            $('#Statementsli').removeClass("menu-open");
            $('#AccPli').removeClass("menu-open");
            $('#AccRli').removeClass("menu-open");
            $('#Setupli').removeClass("menu-open");


            if ($('#VoucherId').val() == 0) {
                addRow(5);
            }
            setTriggers();
        });


        $('#formEdit').submit(function (e) {
            e.preventDefault();

            var VoucherLinesD = Array();
            $("#tblLines TBODY TR").each(function () {

                var row = $(this);
                var GeenralEntriesRows = {};
                var account = row.find('.AccountId').val();
                if (account != "") {
                    GeenralEntriesRows.LineId = row.find('#LineId').val();
                    GeenralEntriesRows.AccountId = row.find('.AccountId').val();
                    GeenralEntriesRows.EmployeeId = row.find('.EmployeeId').val();
                    GeenralEntriesRows.Refno1 = row.find('#Refno1').val();
                    GeenralEntriesRows.Refno2 = row.find('#Refno2').val();
                    GeenralEntriesRows.Refno3 = row.find('#Refno3').val();
                    GeenralEntriesRows.Credit = parseFloat(row.find('#Credit').val());
                    GeenralEntriesRows.Debit = parseFloat(row.find('#Debit').val());
                    GeenralEntriesRows.IsDeleted = row.find('#IsDeleted').val();
                    VoucherLinesD.push(GeenralEntriesRows);
                }
            });
            console.log(VoucherLinesD);

            var Voucher = {

                VoucherLinesD: VoucherLinesD,
                VoucherType: $('#VoucherType').val(),
                CreatedBy: $('#CreatedBy').val(),
                CreatedDate: $('#CreatedDate').val(),
                Description: $('#Description').val(),
                VoucherId: $('#VoucherId').val(),
                VoucherEntryDate: $('#VoucherEntryDate').val(),
                VoucherCode: $('#VoucherCode').val(),
                TotalDebit: $('#TotalDebit').val(),
                TotalCredit: $('#TotalCredit').val(),
                CustomerId: $('#CustomerId').val(),
                VendorId: $('#VendorId').val()
            };

            console.log(Voucher);
            var params = $('#formEdit').serialize();
            var actionType = $('#ACTION_TYPE').val();

            confirmAction('Confirm ?', 'Are you sure you want to save changes ?', 'info', 'Yes', 'No').then(function (result) {
                if (result.value == true) {
                    debugger
                    var totalcredit = $('#TotalCredit').val();
                    var totaldebit = $('#TotalDebit').val();

                    if (totalcredit != totaldebit) {
                        showMsg('Validation Error', 'Total Credit and Total Debit are not same.', 'error');
                    }
                    else {
                    $.ajax({
                        url: `@Url.Content("~")/Finance/Vouchers/${actionType}`,
                        data: Voucher,
                        type: 'POST',
                        async: false,
                        success: function (response) {
                            if (response.result.isError == false) {
                                showMsg('Saved !', 'Record has been saved !', 'success');
                                setTimeout(function () {
                                    window.location = getApplicationName() +'Finance/Vouchers/Index';
                                }, 1000);
                            }
                        }
                    });
                    }
                }
                });

        });

        $('#Description').keyup(function () {
            $('#tblLines tbody tr').find('#TDescription').each((i, item) => {

                var TDescription = $(item);
                TDescription.val($('#Description').val());
            });
        });

        function addRow(n) {

            var rows = 0;
            var table = $('#tblLines');
            $("#tblLines TBODY TR").each(function () {
                rows = rows + 1;
            });
            trSample = table.find('#trSample');
            for (var i = 0; i < n; i++) {
                var newRow = trSample.clone();
                newRow.removeAttr('id');
                var id = 'AccountId' + (rows+i);
                //newRow.find('#AccountId').attr("id", id);
                newRow.find('.AccountId').addClass("select2");
                newRow.find('.AccountId').select2();
                newRow.find('.EmployeeId').addClass("select2");
                newRow.find('.EmployeeId').select2();
                //newRow.find('#' + id).addClass("select2");
                table.find('tbody').append(newRow);
            }
            table.find('tbody tr').not('#trSample').show();
            setTriggers();
        }

        function setTriggers() {

            var table = $('#tblLines');
            table.find('tbody tr').each((i, item) => {

                var tr = $(item);
                if ($('#Description').val() != "") {
                    tr.find('#TDescription').val($('#Description').val());
                }
                var account = tr.find('.AccountId').val();

                if (account != "") {
                    $.ajax({
                        url: `@Url.Content("~")/Finance/Vouchers/GetAccountTitle`,
                        data: {account:account},
                        success: function (response) {
                            if (response.result.isError == false) {
                                tr.find('#AccountTitle').val(response.result.msg);
                            }
                        }
                    });
                }
                var employee = tr.find('.EmployeeId').val();
                if (employee != "") {
                    $.ajax({
                        url: `@Url.Content("~")/Finance/Vouchers/GetEmployeeTitle`,
                        data: { employee: employee},
                        success: function (response) {
                            if (response.result.isError == false) {
                                tr.find('#EmployeeTitle').val(response.result.msg);
                            }
                        }
                    });
                }


                tr.find('.AccountId').change(function () {
                    var account = tr.find('.AccountId option:selected').val();
                    $.ajax({
                        url: `@Url.Content("~")/Finance/Vouchers/GetAccountTitle`,
                        data: {account:account},
                        success: function (response) {
                            if (response.result.isError == false) {
                                tr.find('#AccountTitle').val(response.result.msg);
                            }
                        }
                    });
                });

                tr.find('.EmployeeId').change(function () {
                    var employee = tr.find('.EmployeeId option:selected').val();
                    $.ajax({
                        url: `@Url.Content("~")/Finance/Vouchers/GetEmployeeTitle`,
                        data: { employee: employee},
                        success: function (response) {
                            if (response.result.isError == false) {
                                tr.find('#EmployeeTitle').val(response.result.msg);
                            }
                        }
                    });
                });
                tr.find('#Credit').change(function () {
                    tr.find('#Debit').val(0.00);
                    calculateDebit(tr);
                    calculateCredit(tr);
                });
                tr.find('#Debit').change(function () {
                    tr.find('#Credit').val(0.00);
                    calculateCredit(tr);
                    calculateDebit(tr);
                });

            });
        }
        function deleteRow(tr) {

            tr.toggleClass('bg-danger');
            tr.find('a > #faDelete').toggle();
            tr.find('a > #faUndo').toggle();
            var inputFields = tr.find('#IsDeleted');

            var isDelete = tr.find('#IsDeleted').val();
            if (isDelete == "false") {
                tr.find('#IsDeleted').val("true");
            }
            if (isDelete == "true") {
                tr.find('#IsDeleted').val("false");
            }
            calculateCredit(tr);
            calculateDebit(tr);
        }
        function isNull(val) {
            if (parseFloat(val) > 0 || parseFloat(val) < 0) {
                return parseFloat(val);
            } else {
                return 0;
            }
        }

        function calculateCredit(tr) {
            var totalcredit = 0;
            var totaldebit = 0;

            $("#tblLines > tbody  > tr").not(".bg-danger").each(function () {
                var tr = $(this);
                totalcredit += isNull(tr.find('#Credit').val());
                totaldebit += isNull(tr.find('#Debit').val());
            });
            $('#Summary').find('#TotalCredit').val(totalcredit);
            $('#Summary').find('#Difference').val(totalcredit - totaldebit);
        }

        function calculateDebit(tr) {
            var totalcredit = 0;
            var totaldebit = 0;

            $("#tblLines > tbody  > tr").not(".bg-danger").each(function () {
                var tr = $(this);
                totaldebit += isNull(tr.find('#Debit').val());
                totalcredit += isNull(tr.find('#Credit').val());
            });
            $('#Summary').find('#TotalDebit').val(totaldebit);
            $('#Summary').find('#Difference').val(totalcredit - totaldebit);
        }

    </script>

}
