@using ErpOnClick.DAL.Models
@using ErpOnClick.ErpMain.Resources
@inject LocService SharedLocalizer

@{ GeneralEntries GeneralEntriesMDetails = Model.generalEntriesMDetail;
    List<GeneralEntriesLines> GeneralEntriesDList = Model.generalEntriesDList;
    List<ErpOnClick.DAL.Models.Accounts> AccountsList = Model.AccountsList;
    //List<Branch> BranchDetails = Model.branchList;
    //List<Customers> CustomersDetails = Model.customersList;
    List<TaxRates> TaxList = Model.TaxList;
    bool isEdit = (GeneralEntriesMDetails != null);
}

<link rel="stylesheet" href="~/adminlte/dist/css/invoice.css">



<form id="formEdit" role="form" method="post">
    <input type="hidden" id="ACTION_TYPE" name="ACTION_TYPE" value="@(isEdit ? "Update" : "Save")" />
    <input type="hidden" id="GeneralEntryId" name="GeneralEntryId" value="@(GeneralEntriesMDetails != null ? GeneralEntriesMDetails.GeneralEntryId : 0)" />


    <div class="card card-default card-outline">
        <div class="card-header">
            <h2 class="card-title pt-1">
                @SharedLocalizer.GetLocalizedHtmlString("General Entry")
            </h2>
            <!-- tools box -->
            <div class="card-tools">
                @if (GeneralEntriesMDetails != null)
                {
                <a href="~/Finance/GeneralEntries/print/@GeneralEntriesMDetails.GeneralEntryId" target="_blank" class="btn btn-default btn-sm"><i class="fa fa-print fa-fw"></i>@SharedLocalizer.GetLocalizedHtmlString("Print")</a>
                }
            <button type="submit" class="btn btn-primary btn-sm"><i class="fa fa-save fa-fw"></i> @SharedLocalizer.GetLocalizedHtmlString("Save")</button>
            <a href="~/Finance/GeneralEntries/Index" class="btn btn-default btn-sm"><i class="fa fa-arrow-left fa-fw"></i>@SharedLocalizer.GetLocalizedHtmlString("Return")</a>
            </div>
        </div>
        <div class="card-body pb-0 pt-2 text-sm">
            <div class="row">
                <div class="col-sm-4">
                    <div class="form-group ">
                        <label>@SharedLocalizer.GetLocalizedHtmlString("General Entry Date")</label>
                        <input name="GeneralEntryDate" id="GeneralEntryDate" class="form-control DatePicker" value="@(GeneralEntriesMDetails != null && GeneralEntriesMDetails.GeneralEntryDate != null ? Convert.ToDateTime(GeneralEntriesMDetails.GeneralEntryDate).ToString("dd-MMM-yyyy") : "")" />

                    </div>
                </div>
                <div class="col-sm-4">
                    <div class="form-group ">
                        <label>@SharedLocalizer.GetLocalizedHtmlString("General Entry #")</label>
                        <input type="text" required name="GeneralEntryNo" id="GeneralEntryNo" class="form-control" value="@(GeneralEntriesMDetails != null && GeneralEntriesMDetails.GeneralEntryNo != null ? GeneralEntriesMDetails.GeneralEntryNo : "")" />

                    </div>
                </div>
                <div class="col-sm-4">
                    <div class="form-group ">
                        <label>@SharedLocalizer.GetLocalizedHtmlString("Currency")</label>
                        <select name="Currency" id="Currency" class="form-control" required>
                            <option></option>
                            @if (GeneralEntriesMDetails != null)
                            {
                                if (GeneralEntriesMDetails.Currency == "USD")
                                {
                                    <option value="USD" selected>USD</option>
                                    <option value="SAD">SAD</option>
                                }
                                else if (GeneralEntriesMDetails.Currency == "SAD")
                                {
                                    <option value="USD">USD</option>
                                    <option value="SAD" selected>SAD</option>
                                }
                            }
                            else
                            {
                                <option value="USD">USD</option>
                                <option value="SAD">SAD</option>
                            }

                        </select>
                    </div>
                </div>
            </div>
        </div>
    </div>





    <div class="card card-default card-outline">
        <div class="card-header">
            <h2 class="card-title pt-1">
                @SharedLocalizer.GetLocalizedHtmlString("Transaction")
            </h2>
            <div class="card-tools">
                <a href="javascript:void(0)" class="btn btn-sm btn-default" onclick="addRow(1)">@SharedLocalizer.GetLocalizedHtmlString("Add Row")</a>
                <a href="javascript:void(0)" class="btn btn-sm btn-default" onclick="addRow(3)">@SharedLocalizer.GetLocalizedHtmlString("Add 3 Rows")</a>
                <a href="javascript:void(0)" class="btn btn-sm btn-default" onclick="addRow(5)">@SharedLocalizer.GetLocalizedHtmlString("Add 5 Rows")</a>

            </div>
        </div>
        <div class="card-body p-0">

            <div class="table-responsive">
                <table id="tblLines" class="table table-bordered m-0 table-condensed">
                    <thead>
                        <tr>
                            <th style="display:none">@SharedLocalizer.GetLocalizedHtmlString("S.No") </th>
                            <th style="width:10%!important">@SharedLocalizer.GetLocalizedHtmlString("Account")</th>
                            <th>@SharedLocalizer.GetLocalizedHtmlString("Description")</th>
                            <th style="width:15%!important">@SharedLocalizer.GetLocalizedHtmlString("Debit")</th>
                            <th style="width:15%!important">@SharedLocalizer.GetLocalizedHtmlString("Credit")</th>
                            <th></th>
                        </tr>
                    </thead>
                    <tbody>

                        <tr id="trSample" style="display:none">
                            <td style="display:none">
                                <input type="hidden" id="LineId" name="LineId" value=0>
                            </td>
                            <td style="width:10%!important">
                                <select id="AccountId" name="AccountId">
                                    <option></option>
                                    @foreach (var item in AccountsList)
                                    {
                                        <option value="@item.AccountId">@item.AccountNameEn</option>
                                    }
                                </select>
                            </td>
                            <td><input type="text" id="Description" name="Description" class="text-left" /></td>
                            <td><input min="0" type="number" step="any" id="Debit" name="Debit" /></td>
                            <td><input type="number" min="0" step="any" id="Credit" name="Credit" /></td>
                            <td align="center">
                                <input type="hidden" id="IsDeleted" name="IsDeleted" value="false">

                                <a href="javascript:void(0)" id="lineDelete" class="btn btn-sm text-danger" onclick="deleteRow($(this).parent().parent())">
                                    <i id="faDelete" class="fa fa-trash"></i>
                                    <i id="faUndo" class="fa fa-undo text-white" style="display:none"></i>
                                </a>
                            </td>
                        </tr>

                        @foreach (var item in GeneralEntriesDList)
                        {
                            <tr>
                                <td style="display:none">
                                    <input type="hidden" id="LineId" name="LineId" value="@(item.LineId != 0 ? item.LineId : 0)">
                                </td>
                                <td style="width:10%!important">
                                    <select id="AccountId" name="AccountId">
                                        <option></option>
                                        @foreach (var items in AccountsList)
                                        {
                                            <option value="@items.AccountId" @(item != null && item.AccountId == items.AccountId ? "selected" : "")>@items.AccountNameEn</option>
                                        }
                                    </select>
                                </td>
                                <td><input type="text" id="Description" name="Description" class="text-left" value="@(item.Description != null ? item.Description : "")" /></td>
                                <td><input type="number" min="0" step="any" id="Debit" name="Debit" value="@(item.Debit != null ? item.Debit : 0)" /></td>
                                <td><input type="number" step="any" min="0" id="Credit" name="Credit" value="@(item.Credit != null ? item.Credit : 0)" /></td>
                                <td align="center">
                                    <input type="hidden" id="IsDeleted" name="IsDeleted" value="false">

                                    <a href="javascript:void(0)" id="lineDelete" class="btn btn-sm text-danger" onclick="deleteRow($(this).parent().parent())">
                                        <i id="faDelete" class="fa fa-trash"></i>
                                        <i id="faUndo" class="fa fa-undo text-white" style="display:none"></i>
                                    </a>
                                </td>
                            </tr>
                        }
                    </tbody>
                    <tfoot id="Summary">
                        <tr>
                            <th colspan="2" style="text-align: right !important;padding-right: 10px !important;">@SharedLocalizer.GetLocalizedHtmlString("Total")</th>
                            <th><input type="number" step="any" id="TotalDebit" name="TotalDebit" readonly class="form-control text-right" value="@(GeneralEntriesMDetails!=null?GeneralEntriesMDetails.TotalDebit: 0)"></th>
                            <th><input type="number" step="any" id="TotalCredit" name="TotalCredit" readonly class="form-control text-right" value="@(GeneralEntriesMDetails!=null?GeneralEntriesMDetails.TotalCredit: 0)"></th>
                            <th></th>
                        </tr>
                    </tfoot>
                </table>


            </div>

        </div>

    </div>



    <div class="card card-default card-outline">
        <div class="card-header">
            <h2 class="card-title">
                @SharedLocalizer.GetLocalizedHtmlString("Notes / Remarks")
            </h2>
        </div>
        <div class="card-body p-2">
            <textarea id="Note" name="Note" class="form-control " style="border:none" placeholder="Enter your comments here...">@(GeneralEntriesMDetails != null ? GeneralEntriesMDetails.Note:"")</textarea>
        </div>
    </div>

</form>



@section scripts{

    <script>
        $(function () {

            if ($('#GeneralEntryId').val() == 0) {
                addRow(5);
            }
            setTriggers();
        });


        $('#formEdit').submit(function (e) {
            e.preventDefault();

            var GeneralEntriesD = Array();
            $("#tblLines TBODY TR").each(function () {
                var row = $(this);
                var GeenralEntriesRows = {};
                var account = row.find('#AccountId').val();
                if (account != "") {
                    GeenralEntriesRows.LineId = row.find('#LineId').val();
                    GeenralEntriesRows.AccountId = row.find('#AccountId').val();
                    GeenralEntriesRows.Description = row.find('#Description').val();
                    GeenralEntriesRows.Credit = parseFloat(row.find('#Credit').val());
                    GeenralEntriesRows.Debit = parseFloat(row.find('#Debit').val());
                    GeenralEntriesRows.IsDeleted = row.find('#IsDeleted').val();
                    GeneralEntriesD.push(GeenralEntriesRows);
                }
            });
            console.log(GeneralEntriesD);
            var GeneralEntry = {

                GeneralEntriesLinesD: GeneralEntriesD,
                Currency: $('#Currency').val(),
                GeneralEntryId: $('#GeneralEntryId').val(),
                GeneralEntryDate: $('#GeneralEntryDate').val(),
                GeneralEntryNo: $('#GeneralEntryNo').val(),
                TotalDebit: $('#TotalDebit').val(),
                TotalCredit: $('#TotalCredit').val(),
                Note: $('#Note').val()
            };

            console.log(GeneralEntry);
            var params = $('#formEdit').serialize();
            var actionType = $('#ACTION_TYPE').val();

            confirmAction('Confirm ?', 'Are you sure you want to save changes ?', 'info', 'Yes', 'No').then(function (result) {
                if (result.value == true) {

                    var totalcredit = $('#TotalCredit').val();
                    var totaldebit = $('#TotalDebit').val();

                    if (totalcredit != totaldebit) {
                        showMsg('Validation Error', 'Total Credit and Total Debit are not same.', 'error');
                    }
                    else {
                    $.ajax({
                        url: `@Url.Content("~")/Finance/GeneralEntries/${actionType}`,
                        data: GeneralEntry,
                        type: 'POST',
                        async: false,
                        success: function (response) {
                            if (response.result.isError == false) {
                                showMsg('Saved !', 'Record has been saved !', 'success');
                                setTimeout(function () {
                                    window.location = getApplicationName() +'Finance/GeneralEntries/Index';
                                }, 1000);
                            }
                        }
                    });
                    }
                }
                });

        });

        function addRow(n) {
            var table = $('#tblLines');
            trSample = table.find('#trSample');
            for (var i = 0; i < n; i++) {
                var newRow = trSample.clone();
                newRow.removeAttr('id');
                table.find('tbody').append(newRow);
            }
            table.find('tbody tr').not('#trSample').show();
            setTriggers();

        }


        function setTriggers() {
            var table = $('#tblLines');
            table.find('tbody tr').each((i, item) => {
                var tr = $(item);
                tr.find('#AccountId').change(function () {

                    var account = tr.find('#AccountId option:selected').text();
                    var description = tr.find('#Description').val();

                    if (description == '') {
                        tr.find('#Description').val(account);
                    }
                });
                tr.find('#Credit').change(function () {
                    tr.find('#Debit').val(0.00);
                    calculateDebit(tr);
                    calculateCredit(tr);
                });
                tr.find('#Debit').change(function () {
                    tr.find('#Credit').val(0.00);
                    calculateCredit(tr);
                    calculateDebit(tr);
                });

            });
        }
        function deleteRow(tr) {

            tr.toggleClass('bg-danger');
            tr.find('a > #faDelete').toggle();
            tr.find('a > #faUndo').toggle();
            var inputFields = tr.find('#IsDeleted');

            var isDelete = tr.find('#IsDeleted').val();
            if (isDelete == "false") {
                tr.find('#IsDeleted').val("true");
            }
            if (isDelete == "true") {
                tr.find('#IsDeleted').val("false");
            }
            calculateCredit(tr);
            calculateDebit(tr);
        }
        function isNull(val) {
            if (parseFloat(val) > 0 || parseFloat(val) < 0) {
                return parseFloat(val);
            } else {
                return 0;
            }
        }

        function calculateCredit(tr) {
            var totalcredit = 0;
            $("#tblLines > tbody  > tr").not(".bg-danger").each(function () {
                var tr = $(this);
                totalcredit += isNull(tr.find('#Credit').val());
            });
            $('#Summary').find('#TotalCredit').val(totalcredit);
        }

        function calculateDebit(tr) {
            var totaldebit = 0;
            $("#tblLines > tbody  > tr").not(".bg-danger").each(function () {
                var tr = $(this);
                totaldebit += isNull(tr.find('#Debit').val());
            });
            $('#Summary').find('#TotalDebit').val(totaldebit);
        }

    </script>

}
