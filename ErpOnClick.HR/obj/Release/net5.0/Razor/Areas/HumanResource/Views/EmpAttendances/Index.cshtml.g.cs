#pragma checksum "C:\Users\SGH\OneDrive\Documents\Repo\ErpOnClick(Finance)\ErpOnClick.HR\Areas\HumanResource\Views\EmpAttendances\Index.cshtml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "4b6893a3161c9c52b1362583feab54b4bc3f4b4d"
// <auto-generated/>
#pragma warning disable 1591
[assembly: global::Microsoft.AspNetCore.Razor.Hosting.RazorCompiledItemAttribute(typeof(AspNetCore.Areas_HumanResource_Views_EmpAttendances_Index), @"mvc.1.0.view", @"/Areas/HumanResource/Views/EmpAttendances/Index.cshtml")]
namespace AspNetCore
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Mvc;
    using Microsoft.AspNetCore.Mvc.Rendering;
    using Microsoft.AspNetCore.Mvc.ViewFeatures;
#nullable restore
#line 1 "C:\Users\SGH\OneDrive\Documents\Repo\ErpOnClick(Finance)\ErpOnClick.HR\Areas\HumanResource\Views\EmpAttendances\Index.cshtml"
using ErpOnClick.DAL.Models;

#line default
#line hidden
#nullable disable
#nullable restore
#line 2 "C:\Users\SGH\OneDrive\Documents\Repo\ErpOnClick(Finance)\ErpOnClick.HR\Areas\HumanResource\Views\EmpAttendances\Index.cshtml"
using ErpOnClick.ErpMain.Resources;

#line default
#line hidden
#nullable disable
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"4b6893a3161c9c52b1362583feab54b4bc3f4b4d", @"/Areas/HumanResource/Views/EmpAttendances/Index.cshtml")]
    public class Areas_HumanResource_Views_EmpAttendances_Index : global::Microsoft.AspNetCore.Mvc.Razor.RazorPage<dynamic>
    {
        #pragma warning disable 1998
        public async override global::System.Threading.Tasks.Task ExecuteAsync()
        {
            WriteLiteral("\r\n");
#nullable restore
#line 5 "C:\Users\SGH\OneDrive\Documents\Repo\ErpOnClick(Finance)\ErpOnClick.HR\Areas\HumanResource\Views\EmpAttendances\Index.cshtml"
  

    DateTime? date = Model.attendanceDate;
    List<EmpAttendance> employeecheck = Model.employeecheck;
    var attendancechek = (employeecheck.Count != 0 ? employeecheck.FirstOrDefault().IsSaved : false);


#line default
#line hidden
#nullable disable
            WriteLiteral("\r\n");
            DefineSection("TabName", async() => {
                WriteLiteral("\r\n    Vacant jobs Setup\r\n");
            }
            );
            WriteLiteral(@"<style>
    

    .text {
        display: inline-block;
        padding: 0.5em 1em;
        min-width: 20em;
        line-height: 1.2em;
        background: #84ceeb;
        position: relative;
    }

        

</style>
<input type=""hidden"" name=""attendancechek"" id=""attendancechek""");
            BeginWriteAttribute("value", " value=\"", 670, "\"", 693, 1);
#nullable restore
#line 31 "C:\Users\SGH\OneDrive\Documents\Repo\ErpOnClick(Finance)\ErpOnClick.HR\Areas\HumanResource\Views\EmpAttendances\Index.cshtml"
WriteAttributeValue("", 678, attendancechek, 678, 15, false);

#line default
#line hidden
#nullable disable
            EndWriteAttribute();
            WriteLiteral(" />\r\n\r\n\r\n<div class=\"card card-default card-outline\">\r\n\r\n    <div class=\"card-header\">\r\n        <div class=\"row\">\r\n            <div class=\"col-md-3\">\r\n                <h2 class=\"card-title\">\r\n                    ");
#nullable restore
#line 40 "C:\Users\SGH\OneDrive\Documents\Repo\ErpOnClick(Finance)\ErpOnClick.HR\Areas\HumanResource\Views\EmpAttendances\Index.cshtml"
               Write(SharedLocalizer.GetLocalizedHtmlString("Emp Attendances"));

#line default
#line hidden
#nullable disable
            WriteLiteral("\r\n                </h2>\r\n            </div>\r\n\r\n            <div class=\"col-md-3\">\r\n                <input type=\"text\" placeholder=\"Attendance Date\"");
            BeginWriteAttribute("value", " value=\"", 1111, "\"", 1187, 1);
#nullable restore
#line 45 "C:\Users\SGH\OneDrive\Documents\Repo\ErpOnClick(Finance)\ErpOnClick.HR\Areas\HumanResource\Views\EmpAttendances\Index.cshtml"
WriteAttributeValue("", 1119, date!=null ?Convert.ToDateTime(date).ToString("dd-MMM-yyyy") : "", 1119, 68, false);

#line default
#line hidden
#nullable disable
            EndWriteAttribute();
            WriteLiteral(" name=\"AttendanceDate\" id=\"AttendanceDate\" class=\"form-control DatePicker\" />\r\n            </div>\r\n            <div class=\"col-md-4\">\r\n                <button class=\"btn  btn-sm btn-primary\" onclick=\"searchByDate()\">");
#nullable restore
#line 48 "C:\Users\SGH\OneDrive\Documents\Repo\ErpOnClick(Finance)\ErpOnClick.HR\Areas\HumanResource\Views\EmpAttendances\Index.cshtml"
                                                                            Write(SharedLocalizer.GetLocalizedHtmlString("Search"));

#line default
#line hidden
#nullable disable
            WriteLiteral("</button>\r\n");
            WriteLiteral("            </div>\r\n\r\n\r\n            <!-- tools box -->\r\n            <div class=\"col-md-2 text-right\">\r\n                <button onclick=\"saveAttendace()\" ");
#nullable restore
#line 55 "C:\Users\SGH\OneDrive\Documents\Repo\ErpOnClick(Finance)\ErpOnClick.HR\Areas\HumanResource\Views\EmpAttendances\Index.cshtml"
                                              Write(employeecheck.Count==0 ? "disabled": "");

#line default
#line hidden
#nullable disable
            WriteLiteral(" style=\"margin-left: 94px;\" type=\"button\" class=\"btn  btn-sm btn-primary\">\r\n                    <i class=\"fas fa-plus\"></i> ");
#nullable restore
#line 56 "C:\Users\SGH\OneDrive\Documents\Repo\ErpOnClick(Finance)\ErpOnClick.HR\Areas\HumanResource\Views\EmpAttendances\Index.cshtml"
                                           Write(SharedLocalizer.GetLocalizedHtmlString("Save"));

#line default
#line hidden
#nullable disable
            WriteLiteral(@"
                </button>
            </div>

        </div>

        <!-- /. tools -->
    </div>
    <div id=""AttendanceCheck"" style=""display:none;padding-top:10px;padding-bottom:0px;text-align:center;font-weight:600;letter-spacing:1px"">
        <p style=""margin-bottom:-40px"">
            <span class=""text"" ><strong");
            BeginWriteAttribute("class", " class=\"", 2312, "\"", 2320, 0);
            EndWriteAttribute();
            WriteLiteral(">You did not submit Attendance for this day</strong></span>\r\n        </p>\r\n    </div>\r\n\r\n\r\n    <div class=\"card-body\">\r\n\r\n        <div id=\"divList\"></div>\r\n\r\n    </div>\r\n</div>\r\n\r\n\r\n");
            DefineSection("scripts", async() => {
                WriteLiteral(@"
    <script>
        $(function () {
            BindGrid();
            
            var attendancechek = $('#attendancechek').val();

            console.log(attendancechek);
            if (attendancechek == false) {
                $('#AttendanceCheck').show();

            }
        });
        var applicationName = getApplicationName();

        function getEmployees() {
            var attendaceDate = $('#AttendanceDate').val();

            $.ajax({
                url: applicationName + ""HumanResource/EmpAttendances/GetEmployees"",
                async: false,
                type: ""POST"",
                data: { date: attendaceDate },
                success: function (data) {
                    window.location = applicationName + 'HumanResource/EmpAttendances?attendanceDate=' + attendaceDate;
                }
            });
        };
        function searchByDate() {
            //var date = $('#AttendanceDate').val();
            var attendaceDate = $('#Attendanc");
                WriteLiteral(@"eDate').val();

            //if (date == """") {
            if (attendaceDate == """") {
                showMsg('Enter !', '!Date First');
            }
            else {

                $.ajax({
                    url: applicationName + ""HumanResource/EmpAttendances/GetEmployees"",
                    async: false,
                    type: ""POST"",
                    data: { date: attendaceDate },
                    success: function (data) {
                        window.location = applicationName + 'HumanResource/EmpAttendances?attendanceDate=' + attendaceDate;
                    }
                });

                //    BindGrid(date);
            }


        }

        function BindGrid(date) {
            date = (date == null ? $('#AttendanceDate').val() : date);
            $('#divList').html('<h5 class=""margin-0""><p><i class=""fa fa-spinner fa-spin fa-fw""></i> Please wait while data is loading...</p></h5>');
            $.ajax({
                url: applicationName +");
                WriteLiteral(@" 'HumanResource/empattendances/_list',
                data: { date: date },
                success: function (data) {
                    $('#divList').html(data);
                }
            })
        };


        function saveAttendace() {
            confirmAction('Confirm ?', 'Are you sure you want to save changes ?', 'info', 'Yes', 'No').then(function (result) {
                if (result.value == true) {


                    var empAttendancesList = new Array();

                    $(""#dtList tbody TR"").each(function () {

                        var row = $(this);
                        var EmpAttendance = {};

                        if (row.find(""#AllowanceTypeId"").val() != """") {

                            var IsPresent = ""IsPaidLeave-"" + row.find('#EmpId').val();
                            console.log(row.find(""#IsPresent"").is(':checked'));
                            console.log(row.find(""#IsPaidLeave"").is(':checked'));
                            console.log(ro");
                WriteLiteral(@"w.find(""#IsUnpaidLeave"").is(':checked'));
                            console.log(row.find(""#IsShortLeave"").is(':checked'));
                            EmpAttendance.EmpAttendanceId = parseInt(row.find(""#EmpAttendanceId"").val());
                            EmpAttendance.EmpId = parseInt(row.find('#EmpId').val());
                            EmpAttendance.AttendanceDate = ($(""#AttendanceDate"").val() == """" ? null : $(""#AttendanceDate"").val());
                            EmpAttendance.CreatedDate = ($(""#CreatedDate"").val() == """" ? null : $(""#CreatedDate"").val());
                            EmpAttendance.TimeIn = (row.find(""#TimeIn"").val() == """" ? null : row.find(""#TimeIn"").val());
                            EmpAttendance.Note = (row.find(""#Note"").val() == """" ? null : row.find(""#Note"").val());
                            EmpAttendance.TimeOut = (row.find(""#TimeOut"").val());
                            EmpAttendance.IsPresent = (row.find(""#IsPresent"").is(':checked') == true ? true : false);
        ");
                WriteLiteral(@"                    EmpAttendance.IsPaidLeave = (row.find(""#IsPaidLeave"").is(':checked') == true ? true : false);
                            EmpAttendance.IsUnpaidLeave = (row.find(""#IsUnpaidLeave"").is(':checked') == true ? true : false);
                            EmpAttendance.IsShortLeave = (row.find(""#IsShortLeave"").is(':checked') == true ? true : false);

                            empAttendancesList.push(EmpAttendance);
                        }


                    });
                    var attendaceDate = $('#AttendanceDate').val();
                    $.ajax({
                        url: applicationName + ""HumanResource/EmpAttendances/save"",
                        data: { postedData: empAttendancesList },
                        async: false,
                        type: 'POST',

                        success: function (data) {
                            
                            if (data.monthcheck == 1) {
                                showMsg('Failed !', 'Kindly ");
                WriteLiteral(@"mark the current month attendance !', 'error');

                            }
                            else {
                            if (data.result.isError != true) {
                                showMsg('Saved !', 'Record has been saved !', 'success');
                                setTimeout(function () {
                                    window.location = applicationName + 'HumanResource/EmpAttendances?attendanceDate=' + attendaceDate;
                                }, 500);
                            }
                            else if (data.result.msg != '') {
                                showMsg('Save Failed !', data.result.msg, 'error');
                            }
                            else {
                                showMsg('Save Failed !', 'Something went wrong. Try again', 'error');
                                }
                            }
                        }
                    });
                }
            });

        }");
                WriteLiteral("\r\n    </script>\r\n");
            }
            );
        }
        #pragma warning restore 1998
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public LocService SharedLocalizer { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider ModelExpressionProvider { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IUrlHelper Url { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IViewComponentHelper Component { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IJsonHelper Json { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<dynamic> Html { get; private set; }
    }
}
#pragma warning restore 1591
