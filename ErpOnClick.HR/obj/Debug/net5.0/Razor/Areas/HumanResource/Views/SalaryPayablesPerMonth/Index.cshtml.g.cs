#pragma checksum "C:\Nayel Solutions Projects\Source Code\ErpOnClick(Finance)\ErpOnClick.HR\Areas\HumanResource\Views\SalaryPayablesPerMonth\Index.cshtml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "09786479e6be869ede5813338453996eebe3004a"
// <auto-generated/>
#pragma warning disable 1591
[assembly: global::Microsoft.AspNetCore.Razor.Hosting.RazorCompiledItemAttribute(typeof(AspNetCore.Areas_HumanResource_Views_SalaryPayablesPerMonth_Index), @"mvc.1.0.view", @"/Areas/HumanResource/Views/SalaryPayablesPerMonth/Index.cshtml")]
namespace AspNetCore
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Mvc;
    using Microsoft.AspNetCore.Mvc.Rendering;
    using Microsoft.AspNetCore.Mvc.ViewFeatures;
#nullable restore
#line 1 "C:\Nayel Solutions Projects\Source Code\ErpOnClick(Finance)\ErpOnClick.HR\Areas\HumanResource\Views\SalaryPayablesPerMonth\Index.cshtml"
using ErpOnClick.DAL.Models;

#line default
#line hidden
#nullable disable
#nullable restore
#line 2 "C:\Nayel Solutions Projects\Source Code\ErpOnClick(Finance)\ErpOnClick.HR\Areas\HumanResource\Views\SalaryPayablesPerMonth\Index.cshtml"
using ErpOnClick.ErpMain.Resources;

#line default
#line hidden
#nullable disable
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"09786479e6be869ede5813338453996eebe3004a", @"/Areas/HumanResource/Views/SalaryPayablesPerMonth/Index.cshtml")]
    public class Areas_HumanResource_Views_SalaryPayablesPerMonth_Index : global::Microsoft.AspNetCore.Mvc.Razor.RazorPage<dynamic>
    {
        #pragma warning disable 1998
        public async override global::System.Threading.Tasks.Task ExecuteAsync()
        {
            WriteLiteral("\r\n");
#nullable restore
#line 5 "C:\Nayel Solutions Projects\Source Code\ErpOnClick(Finance)\ErpOnClick.HR\Areas\HumanResource\Views\SalaryPayablesPerMonth\Index.cshtml"
  

    DateTime? date = Model.SalaryPayablesPerMonthDate;


#line default
#line hidden
#nullable disable
            WriteLiteral("\r\n");
            DefineSection("TabName", async() => {
                WriteLiteral("\r\n    Vacant jobs Setup\r\n");
            }
            );
            WriteLiteral("\r\n\r\n\r\n<div class=\"card card-default card-outline\">\r\n\r\n    <div class=\"card-header\">\r\n        <div class=\"row\">\r\n            <div class=\"col-md-3\">\r\n                <h2 class=\"card-title\">\r\n                    ");
#nullable restore
#line 23 "C:\Nayel Solutions Projects\Source Code\ErpOnClick(Finance)\ErpOnClick.HR\Areas\HumanResource\Views\SalaryPayablesPerMonth\Index.cshtml"
               Write(SharedLocalizer.GetLocalizedHtmlString("Emp Salary Payable"));

#line default
#line hidden
#nullable disable
            WriteLiteral("\r\n                </h2>\r\n            </div>\r\n\r\n            <div class=\"col-md-3\">\r\n                <input type=\"month\" placeholder=\"Performance Date\"");
            BeginWriteAttribute("value", " value=\"", 638, "\"", 694, 1);
#nullable restore
#line 28 "C:\Nayel Solutions Projects\Source Code\ErpOnClick(Finance)\ErpOnClick.HR\Areas\HumanResource\Views\SalaryPayablesPerMonth\Index.cshtml"
WriteAttributeValue("", 646, date.Value.Year+"-"+date.Value.ToString("MM"), 646, 48, false);

#line default
#line hidden
#nullable disable
            EndWriteAttribute();
            WriteLiteral("  name=\"AttendanceDate\" id=\"AttendanceDate\" class=\"form-control\" />\r\n            </div>\r\n            <div class=\"col-md-4\">\r\n                <button class=\"btn  btn-sm btn-primary\" onclick=\"searchByDate()\">");
#nullable restore
#line 31 "C:\Nayel Solutions Projects\Source Code\ErpOnClick(Finance)\ErpOnClick.HR\Areas\HumanResource\Views\SalaryPayablesPerMonth\Index.cshtml"
                                                                            Write(SharedLocalizer.GetLocalizedHtmlString("Search"));

#line default
#line hidden
#nullable disable
            WriteLiteral("</button>\r\n                <button class=\"btn  btn-sm btn-primary\" onclick=\"getEmployees()\">");
#nullable restore
#line 32 "C:\Nayel Solutions Projects\Source Code\ErpOnClick(Finance)\ErpOnClick.HR\Areas\HumanResource\Views\SalaryPayablesPerMonth\Index.cshtml"
                                                                            Write(SharedLocalizer.GetLocalizedHtmlString("Get Employees"));

#line default
#line hidden
#nullable disable
            WriteLiteral(@"</button>
            </div>


            <!-- tools box -->
            <div class=""col-md-2"">
                <button onclick=""saveAttendace()"" style=""margin-left: 94px;"" type=""button"" class=""btn  btn-sm btn-primary"">
                    <i class=""fas fa-plus""></i> ");
#nullable restore
#line 39 "C:\Nayel Solutions Projects\Source Code\ErpOnClick(Finance)\ErpOnClick.HR\Areas\HumanResource\Views\SalaryPayablesPerMonth\Index.cshtml"
                                           Write(SharedLocalizer.GetLocalizedHtmlString("Save"));

#line default
#line hidden
#nullable disable
            WriteLiteral("\r\n                </button>\r\n            </div>\r\n\r\n        </div>\r\n\r\n        <!-- /. tools -->\r\n    </div>\r\n\r\n\r\n\r\n    <div class=\"card-body\">\r\n        <div id=\"divList\"></div>\r\n\r\n    </div>\r\n</div>\r\n\r\n\r\n");
            DefineSection("scripts", async() => {
                WriteLiteral(@"
    <script>
        $(function () {
            BindGrid();
        });
        var applicationName = getApplicationName();

        function getEmployees() {
            confirmAction('Confirm ?', 'Are you sure you want to save changes ?', 'info', 'Yes', 'No').then(function (result) {
                if (result.value == true) {

                    var attendaceDate = $('#AttendanceDate').val();

                    $.ajax({
                        url: applicationName + ""HumanResource/SalaryPayablesPerMonth/GetEmployees"",
                        async: false,
                        type: ""POST"",
                        data: { date: attendaceDate },
                        success: function (data) {
                            window.location = applicationName + 'HumanResource/SalaryPayablesPerMonth?SalaryPayablesPerMonthDate=' + attendaceDate;
                        }
                    });
                }
            });

        };
        function searchByDate() {
     ");
                WriteLiteral(@"       var date = $('#AttendanceDate').val();

            if (date == """") {
                showMsg('Enter !', '!Date First');
            }
            else {
                BindGrid(date);
            }


        }

        function BindGrid(date) {
            date = (date == null ? $('#AttendanceDate').val() : date);
            $('#divList').html('<h5 class=""margin-0""><p><i class=""fa fa-spinner fa-spin fa-fw""></i> Please wait while data is loading...</p></h5>');
            $.ajax({
                url: applicationName + 'HumanResource/SalaryPayablesPerMonth/_list',
                data: { date: date },
                success: function (data) {
                    $('#divList').html(data);
                }
            })
        };


        function saveAttendace() {
            confirmAction('Confirm ?', 'Are you sure you want to save changes ?', 'info', 'Yes', 'No').then(function (result) {
                if (result.value == true) {


                    var empAtten");
                WriteLiteral(@"dancesList = new Array();

                    $(""#dtList tbody TR"").each(function () {

                        var row = $(this);
                        var empSalaryPayablesPerMonth = {};

                        if (row.find(""#AllowanceTypeId"").val() != """") {
                           
                            empSalaryPayablesPerMonth.PayableId = parseInt(row.find(""#PayableId"").val());
                            empSalaryPayablesPerMonth.EmpId = parseInt(row.find(""#EmpId"").val());
                            empSalaryPayablesPerMonth.OtherDeduction = parseInt(row.find(""#OtherDeduction"").val());
                            empSalaryPayablesPerMonth.LoadDeductionThisMonth = parseInt(row.find(""#LoadDeductionThisMonth"").val());
                            empSalaryPayablesPerMonth.TotalDeduction = parseInt(row.find(""#TotalDeduction"").val());
                            empSalaryPayablesPerMonth.Additions = parseInt(row.find(""#Additions"").val());
                            empSalaryPayab");
                WriteLiteral(@"lesPerMonth.SalaryMonth = parseInt(row.find(""#SalaryMonth"").val());
                            empSalaryPayablesPerMonth.SalaryYear = parseInt(row.find(""#SalaryYear"").val());
                            empSalaryPayablesPerMonth.SalaryDate = ($(""#SalaryDate"").val() == """" ? null : $(""#SalaryDate"").val());

                            empAttendancesList.push(empSalaryPayablesPerMonth);

                        }
                       

                    });
                    var attendaceDate = $('#AttendanceDate').val();
                    $.ajax({
                        url: applicationName + ""HumanResource/SalaryPayablesPerMonth/save"",
                        data: { postedData: empAttendancesList },
                        async: false,
                        type: 'POST',

                        success: function (data) {
                            if (data.result.isError != true) {
                                showMsg('Saved !', 'Record has been saved !', 'success');
    ");
                WriteLiteral(@"                            setTimeout(function () {
                                    window.location = applicationName + 'HumanResource/SalaryPayablesPerMonth?attendanceDate=' + attendaceDate;
                                }, 500);
                            }
                            else if (data.result.msg != '') {
                                showMsg('Save Failed !', data.result.msg, 'error');
                            }
                            else {
                                showMsg('Save Failed !', 'Something went wrong. Try again', 'error');
                            }
                        }
                    });
                }
            });

        }
    </script>
");
            }
            );
        }
        #pragma warning restore 1998
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public LocService SharedLocalizer { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider ModelExpressionProvider { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IUrlHelper Url { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IViewComponentHelper Component { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IJsonHelper Json { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<dynamic> Html { get; private set; }
    }
}
#pragma warning restore 1591
